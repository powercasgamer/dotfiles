#!/usr/bin/env zsh

function paste() {
  emulate -L zsh
  setopt extendedglob localoptions

  # Force load colors (works in both interactive and non-interactive shells)
  autoload -Uz colors && colors

  # Show help if no arguments
  if [[ $# -eq 0 ]]; then
    echo "${fg[red]}Usage:${reset_color} paste <file> [language]"
    return 1
  fi

  local file="$1"
  local lang="${2:-}"
  local content_type="text/plain"
  local filename extension

  # Validate file exists and is readable
  if [[ ! -f "$file" ]] || [[ ! -r "$file" ]]; then
    echo "${fg[red]}Error:${reset_color} Cannot access file: ${fg[yellow]}${file}${reset_color}" >&2
    return 1
  fi

  # Extract filename and extension
  filename=${file:t}
  extension=${file:e:l}

  # Language to content-type mapping
  local -A lang_map=(
    log      log
    sh      shell
    bash    shell
    zsh     shell
    js      javascript
    ts      typescript
    py      python
    java    java
    kt      kotlin
    kts     kotlin
    go      go
    rs      rust
    rb      ruby
    php     php
    pl      perl
    json    json
    html    html
    css     css
    md      markdown
    xml     xml
    yml     yaml
    yaml    yaml
    c       c
    cpp     cpp
    h       c
    hpp     cpp
    cs      csharp
  )

  # Set content-type
  if [[ -z "$lang" ]]; then
    lang=${lang_map[$extension]:-plain}
  fi
  content_type="text/$lang"

  # Colored upload message
  echo "${fg[blue]}Uploading${reset_color} ${fg[yellow]}${filename}${reset_color} (${fg[green]}${content_type}${reset_color})..." >&2

  # Execute curl (without -s flag to see errors)
  local response
  response=$(curl -f -T "$file" -H "Content-Type: $content_type" \
    https://api.pastes.dev/post 2>&1)

  local ret=$?
  if [[ $ret -ne 0 ]]; then
    echo "${fg[red]}Error${reset_color} ($ret): Failed to upload file" >&2
    echo "$response" >&2
    return $ret
  fi

  # Process response
  local url
  if command -v jq &>/dev/null; then
    url=$(echo "$response" | jq -r '.url // empty' 2>/dev/null)
  else
    url=$(echo "$response" | grep -oE '"url":"[^"]+"' | cut -d'"' -f4)
  fi

  if [[ -n "$url" ]]; then
    echo "${fg[green]}Success!${reset_color} Paste URL: ${fg[cyan]}${url}${reset_color}"
    # Copy to clipboard
    if command -v pbcopy &>/dev/null; then
      echo -n "$url" | pbcopy && echo "(URL copied to clipboard)"
    elif command -v xclip &>/dev/null; then
      echo -n "$url" | xclip -selection clipboard && echo "(URL copied to clipboard)"
    fi
  else
    echo "$response"
  fi
}

# Only run if executed directly (not sourced)
if [[ "${(%):-%N}" == "paste" ]]; then
  paste "$@"
fi