#!/usr/bin/env bash
# File upload utility using paste.dev API
# Requires: curl, jq (optional)

# Load logging utilities
DOTFILES_ROOT="/usr/local/share/dotfiles-system"
source "${DOTFILES_ROOT}/system/scripts/logging.sh" 2>/dev/null || {
  echo "Error: Failed to load logging utilities" >&2
  exit 1
}

function paste() {
  # Show help if no arguments
  if [[ $# -eq 0 ]]; then
    error "Usage: paste <file> [language]"
    info "Available language shortcuts: sh, js, py, java, go, rs, rb, php, json, etc."
    return 1
  fi

  local file="$1"
  local lang="${2:-}"
  local content_type="text/plain"
  local filename extension

  # Validate file exists and is readable
  if [[ ! -f "$file" ]] || [[ ! -r "$file" ]]; then
    error "Cannot access file: ${file}"
    return 1
  fi

  # Extract filename and extension
  filename=$(basename "$file")
  extension="${filename##*.}"
  extension=$(echo "$extension" | tr '[:upper:]' '[:lower:]')

  # Language to content-type mapping
  declare -A lang_map=(
    ['log']='log'
    ['sh']='shell'
    ['bash']='shell'
    ['zsh']='shell'
    ['js']='javascript'
    ['ts']='typescript'
    ['py']='python'
    ['java']='java'
    ['kt']='kotlin'
    ['kts']='kotlin'
    ['go']='go'
    ['rs']='rust'
    ['rb']='ruby'
    ['php']='php'
    ['pl']='perl'
    ['json']='json'
    ['html']='html'
    ['css']='css'
    ['md']='markdown'
    ['xml']='xml'
    ['yml']='yaml'
    ['yaml']='yaml'
    ['c']='c'
    ['cpp']='cpp'
    ['h']='c'
    ['hpp']='cpp'
    ['cs']='csharp'
  )

  # Set content-type
  if [[ -z "$lang" ]]; then
    lang=${lang_map["$extension"]:-plain}
  fi
  content_type="text/$lang"

  # Upload message
  step "Uploading ${filename} (${content_type})"

  # Execute curl
  local response
  response=$(curl -f -T "$file" -H "Content-Type: $content_type" \
    https://api.pastes.dev/post 2>&1)

  local ret=$?
  if [[ $ret -ne 0 ]]; then
    error "Failed to upload file (curl error $ret)"
    info "Server response: ${response}"
    return $ret
  fi

  # Process response
  local url
  if command -v jq &>/dev/null; then
    url=$(echo "$response" | jq -r '.url // empty' 2>/dev/null)
  else
    url=$(echo "$response" | grep -oE '"url":"[^"]+"' | cut -d'"' -f4)
  fi

  if [[ -n "$url" ]]; then
    success "Paste created successfully"
    info "URL: ${url}"

    # Copy to clipboard
    if command -v pbcopy &>/dev/null; then
      echo -n "$url" | pbcopy && info "URL copied to clipboard (macOS)"
    elif command -v xclip &>/dev/null; then
      echo -n "$url" | xclip -selection clipboard && info "URL copied to clipboard (Linux)"
    elif command -v wl-copy &>/dev/null; then
      echo -n "$url" | wl-copy && info "URL copied to clipboard (Wayland)"
    fi
  else
    error "Failed to parse response"
    info "Raw response: ${response}"
  fi
}

# Only run if executed directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  # Set default logging level to INFO
  export LOG_LEVEL="INFO"
  paste "$@"
fi